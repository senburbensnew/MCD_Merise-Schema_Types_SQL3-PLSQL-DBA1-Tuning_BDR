SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 1. Supprimer les indexes recommandés dans EXO91 et posés dans EXO91_TUNED
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> -- liste des indexes actuels
SQL> 
SQL> select table_name, column_name, index_name
  2  from user_ind_columns
  3  where table_name in ('EXAMEN','CONSULTATION','PRESCRIPTION','FACTURE','RENDEZ_VOUS','MEDECIN','PATIENT')
  4  order by table_name, index_name, column_name;

TABLE_NAME                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------                                                                        
COLUMN_NAME                                                                                                                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
INDEX_NAME                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------                                                                        
CONSULTATION                                                                                                                                                                                            
ID_CONSULTATION_                                                                                                                                                                                        
PK_CONSULTATION                                                                                                                                                                                         
                                                                                                                                                                                                        
EXAMEN                                                                                                                                                                                                  
DETAILS_EXAMEN                                                                                                                                                                                          
EXAMEN_IDX$$_00130000                                                                                                                                                                                   
                                                                                                                                                                                                        
EXAMEN                                                                                                                                                                                                  
ID_EXAMEN_                                                                                                                                                                                              
PK_EXAMEN                                                                                                                                                                                               
                                                                                                                                                                                                        
FACTURE                                                                                                                                                                                                 
ID_FACTURE_                                                                                                                                                                                             
PK_FACTURE                                                                                                                                                                                              
                                                                                                                                                                                                        
MEDECIN                                                                                                                                                                                                 
ID_MEDECIN_                                                                                                                                                                                             
PK_MEDECIN                                                                                                                                                                                              
                                                                                                                                                                                                        
PATIENT                                                                                                                                                                                                 
ID_PATIENT_                                                                                                                                                                                             
PK_PATIENT                                                                                                                                                                                              
                                                                                                                                                                                                        
PRESCRIPTION                                                                                                                                                                                            
ID_PRESCRIPTION_                                                                                                                                                                                        
PK_PRESCRIPTION                                                                                                                                                                                         
                                                                                                                                                                                                        
RENDEZ_VOUS                                                                                                                                                                                             
ID_MEDECIN_                                                                                                                                                                                             
PK_RENDEZ_VOUS                                                                                                                                                                                          
                                                                                                                                                                                                        
RENDEZ_VOUS                                                                                                                                                                                             
ID_PATIENT_                                                                                                                                                                                             
PK_RENDEZ_VOUS                                                                                                                                                                                          
                                                                                                                                                                                                        

9 rows selected.

SQL> 
SQL> -- suppression des indexes posés dans le EXO91
SQL> /*
SQL> declare
SQL> 
SQL> sql_stmt	     varchar2(200);
SQL> cursor c1 is
SQL> 	     select index_name
SQL> 	     from user_indexes
SQL> 	     where table_name in ('EXAMEN','CONSULTATION','PRESCRIPTION','FACTURE','RENDEZ_VOUS','MEDECIN','PATIENT')
SQL> 	     and
SQL> 	     (UNIQUENESS = 'NONUNIQUE'
SQL> 		     OR
SQL> 		     (UNIQUENESS='UNIQUE'
SQL> 			     and index_name not in (
SQL> 			     select constraint_name
SQL> 			     from user_constraints
SQL> 			     where constraint_type
SQL> 			     IN ('P', 'U')
SQL> 			     )
SQL> 		     )
SQL> 	     );
SQL> begin
SQL> 	     for C1_elem in c1
SQL> 	     loop
SQL> 		     sql_stmt:= 'drop index ' || c1_elem.index_name;
SQL> 		     EXECUTE IMMEDIATE sql_stmt;
SQL> 	     end loop;
SQL> 
SQL> end;
SQL> /
SQL> */
SQL> -- liste des indexes après
SQL> select table_name, column_name, index_name
  2  from user_ind_columns
  3  where table_name in ('EXAMEN','CONSULTATION','PRESCRIPTION','FACTURE','RENDEZ_VOUS','MEDECIN','PATIENT')
  4  order by table_name, index_name, column_name;

TABLE_NAME                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------                                                                        
COLUMN_NAME                                                                                                                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
INDEX_NAME                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------                                                                        
CONSULTATION                                                                                                                                                                                            
ID_CONSULTATION_                                                                                                                                                                                        
PK_CONSULTATION                                                                                                                                                                                         
                                                                                                                                                                                                        
EXAMEN                                                                                                                                                                                                  
DETAILS_EXAMEN                                                                                                                                                                                          
EXAMEN_IDX$$_00130000                                                                                                                                                                                   
                                                                                                                                                                                                        
EXAMEN                                                                                                                                                                                                  
ID_EXAMEN_                                                                                                                                                                                              
PK_EXAMEN                                                                                                                                                                                               
                                                                                                                                                                                                        
FACTURE                                                                                                                                                                                                 
ID_FACTURE_                                                                                                                                                                                             
PK_FACTURE                                                                                                                                                                                              
                                                                                                                                                                                                        
MEDECIN                                                                                                                                                                                                 
ID_MEDECIN_                                                                                                                                                                                             
PK_MEDECIN                                                                                                                                                                                              
                                                                                                                                                                                                        
PATIENT                                                                                                                                                                                                 
ID_PATIENT_                                                                                                                                                                                             
PK_PATIENT                                                                                                                                                                                              
                                                                                                                                                                                                        
PRESCRIPTION                                                                                                                                                                                            
ID_PRESCRIPTION_                                                                                                                                                                                        
PK_PRESCRIPTION                                                                                                                                                                                         
                                                                                                                                                                                                        
RENDEZ_VOUS                                                                                                                                                                                             
ID_MEDECIN_                                                                                                                                                                                             
PK_RENDEZ_VOUS                                                                                                                                                                                          
                                                                                                                                                                                                        
RENDEZ_VOUS                                                                                                                                                                                             
ID_PATIENT_                                                                                                                                                                                             
PK_RENDEZ_VOUS                                                                                                                                                                                          
                                                                                                                                                                                                        

9 rows selected.

SQL> 
SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 2. Charger les requêtes dans la table utilisateur user_workload
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> -- Si utile Suppession puis création de la table utilisateur
SQL> drop table user_workload;

Table dropped.

SQL> 
SQL> 
SQL> create table user_workload(
  2  MODULE VARCHAR2(64) ,   --Nom du module applicatif.
  3  ACTION VARCHAR2(64),    -- Action sur l'application.
  4  BUFFER_GETS NUMBER default 0, --nbre total de buffer-gets pour la requête.
  5  CPU_TIME NUMBER default 0, -- Total CPU time in seconds for the statement.
  6  ELAPSED_TIME NUMBER default 0, -- Total elapsed time in seconds for the statement.
  7  DISK_READS NUMBER default 0 , --Total number of disk-read operations used
  8  				     -- by the statement.
  9  ROWS_PROCESSED NUMBER default 0, --  Total number of rows process by this
 10  				     -- SQL statement.
 11  EXECUTIONS NUMBER default 1, -- Total number of times the statement is executed.
 12  OPTIMIZER_COST NUMBER default  0, -- Optimizer's calculated cost value for
 13  					       -- executing the query.
 14  LAST_EXECUTION_DATE DATE  default SYSDATE , -- Last time the query is
 15  				     -- used. Defaults to not available.
 16  PRIORITY NUMBER default 2,      --  Must be one of the following values:
 17  				     -- 1- HIGH, 2- MEDIUM, or 3- LOW
 18  SQL_TEXT CLOB,	     --  or LONG or VARCHAR2
 19  				     -- None The SQL statement. This is a required		     -- column.
 20  STAT_PERIOD NUMBER default 1 ,
 21  -- Period of time that corresponds to the execution statistics in seconds.
 22  USERNAME VARCHAR(30) default user
 23  --Current user User submitting the query. This is a required column.
 24  );

Table created.

SQL> 
SQL> 
SQL> 
SQL> -- chargement des requêtes dans cette table
SQL> -- aggregation with selection
SQL> 
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example1', 'Action', 2,
  3  'SELECT * FROM PATIENT OP')
  4  /
old   2: VALUES ('&MYPDBUSER', 'Example1', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example1', 'Action', 2,

1 row created.

SQL> 
SQL> 
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example2', 'Action', 2,
  3   'SELECT * FROM CONSULTATION OC');
old   2: VALUES ('&MYPDBUSER', 'Example2', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example2', 'Action', 2,

1 row created.

SQL> 
SQL> 
SQL> 
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example3', 'Action', 2,
  3   'SELECT E.details_examens, COUNT(*) AS NB_LIGNES
  4  FROM (SELECT DISTINCT oe.Details_Examen AS details_examens FROM EXAMEN oe) E
  5  GROUP BY E.details_examens');
old   2: VALUES ('&MYPDBUSER', 'Example3', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example3', 'Action', 2,

1 row created.

SQL> 
SQL> 
SQL>  -- liste des transactions par compte et client pour lesquels le solde du compte négatif
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example3', 'Action', 2,'SELECT E.details_examens, COUNT(*) AS NB_LIGNES
  3  FROM (SELECT DISTINCT oe.Details_Examen AS details_examens FROM EXAMEN oe) E
  4  GROUP BY E.details_examens
  5  ORDER BY E.details_examens ASC');
old   2:  VALUES ('&MYPDBUSER', 'Example3', 'Action', 2,'SELECT E.details_examens, COUNT(*) AS NB_LIGNES
new   2:  VALUES ('HOPITAL', 'Example3', 'Action', 2,'SELECT E.details_examens, COUNT(*) AS NB_LIGNES

1 row created.

SQL> 
SQL> -- liste des transactions par compte et client connaissant le nom du client
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example5', 'Action', 2,
  3   'SELECT ID_PATIENT_, COUNT (*), SUM (MONTANT_TOTAL)
  4  	 FROM FACTURE
  5  GROUP BY ID_PATIENT_
  6  ORDER BY ID_PATIENT_');
old   2:  VALUES ('&MYPDBUSER', 'Example5', 'Action', 2,
new   2:  VALUES ('HOPITAL', 'Example5', 'Action', 2,

1 row created.

SQL> 
SQL>  -- liste des transactions par compte et client connaissant le nom du client et opérées à une date donnée
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example6', 'Action', 2,
  3   'SELECT *
  4    FROM CONSULTATION C INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_');
old   2:  VALUES ('&MYPDBUSER', 'Example6', 'Action', 2,
new   2:  VALUES ('HOPITAL', 'Example6', 'Action', 2,

1 row created.

SQL> 
SQL>  -- 7ème requête
SQL>  -- liste des opération d'un client données de type DEBIT
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example7', 'Action', 2,
  3   'SELECT *
  4    FROM FACTURE F INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_');
old   2:  VALUES ('&MYPDBUSER', 'Example7', 'Action', 2,
new   2:  VALUES ('HOPITAL', 'Example7', 'Action', 2,

1 row created.

SQL> 
SQL>  -- Erreur 1 : total des transaction par client, par compte, par operation
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example8', 'Action', 2,
  3   'SELECT *
  4  	 FROM CONSULTATION C INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_
  5  ORDER BY C.DATE_CONSULTATION');
old   2: VALUES ('&MYPDBUSER', 'Example8', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example8', 'Action', 2,

1 row created.

SQL> 
SQL>  -- Erreur 2 : total des transaction par client, par compte, par operation
SQL>  -- dont le total est supérieur à 10000
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example9', 'Action', 2,
  3   'SELECT F.ID_PATIENT_, P.EMAIL, SUM (F.MONTANT_TOTAL) MONTANT_TOTAL
  4  	 FROM FACTURE F INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_
  5  GROUP BY F.ID_PATIENT_, P.EMAIL
  6  ORDER BY F.ID_PATIENT_, P.EMAIL');
old   2: VALUES ('&MYPDBUSER', 'Example9', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example9', 'Action', 2,

1 row created.

SQL> 
SQL> 
SQL> -- 10ème balance des transactions par type et par date
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example10', 'Action', 2,
  3   'SELECT *
  4  	 FROM CONSULTATION C RIGHT JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_
  5  ORDER BY C.DATE_CONSULTATION');
old   2: VALUES ('&MYPDBUSER', 'Example10', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example10', 'Action', 2,

1 row created.

SQL> 
SQL> -- balance des transactions par type
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example11', 'Action', 2,
  3   'SELECT C.*, P.*, E.*
  4    FROM CONSULTATION  C
  5  	    INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_
  6  	    INNER JOIN EXAMEN E ON C.ID_CONSULTATION_ = E.ID_CONSULTATION_');
old   2: VALUES ('&MYPDBUSER', 'Example11', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example11', 'Action', 2,

1 row created.

SQL> 
SQL>  -- balance des transactions par type pour des compte épargne entre deux dates
SQL>   INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example12', 'Action', 2,
  3   'SELECT F.*, P.*, C.*
  4    FROM FACTURE  F
  5  	    INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_
  6  	    INNER JOIN CONSULTATION C ON F.ID_FACTURE_ = C.ID_FACTURE_') ;
old   2: VALUES ('&MYPDBUSER', 'Example12', 'Action', 2,
new   2: VALUES ('HOPITAL', 'Example12', 'Action', 2,

1 row created.

SQL> 
SQL> 
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example13', 'Action', 2,
  3   'SELECT C.*, P.*, E.*
  4  	 FROM CONSULTATION C
  5  	      INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_
  6  	      INNER JOIN EXAMEN E ON C.ID_CONSULTATION_ = E.ID_CONSULTATION_
  7  ORDER BY C.DATE_CONSULTATION');
old   2:  VALUES ('&MYPDBUSER', 'Example13', 'Action', 2,
new   2:  VALUES ('HOPITAL', 'Example13', 'Action', 2,

1 row created.

SQL> 
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example14', 'Action', 2,
  3   'SELECT F.ID_PATIENT_,
  4  	      P.EMAIL,
  5  	      SUM (F.MONTANT_TOTAL)	MONTANT_TOTAL,
  6  	      F.DATE_FACTURE,
  7  	      C.DATE_CONSULTATION
  8  	 FROM FACTURE F
  9  	      INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_
 10  	      INNER JOIN CONSULTATION C ON F.ID_FACTURE_ = C.ID_FACTURE_
 11  GROUP BY F.ID_PATIENT_,
 12  	      P.EMAIL,
 13  	      F.DATE_FACTURE,
 14  	      C.DATE_CONSULTATION
 15  ORDER BY F.ID_PATIENT_,
 16  	      P.EMAIL,
 17  	      F.DATE_FACTURE,
 18  	      C.DATE_CONSULTATION') ;
old   2:  VALUES ('&MYPDBUSER', 'Example14', 'Action', 2,
new   2:  VALUES ('HOPITAL', 'Example14', 'Action', 2,

1 row created.

SQL> 
SQL> 
SQL> commit;

Commit complete.

SQL> 
SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 3. Analyser les requêtes et produire les recommandations
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> 
SQL> -- programmation de tache Sql access advisor
SQL> set serveroutput on
SQL> 
SQL> -- fixer les spérateurs de nombre en Anglais. "," pour les décimaux et "." pour les groupes
SQL> 
SQL> -- Anglais
SQL> alter session set NLS_NUMERIC_CHARACTERS = '.,' ;

Session altered.

SQL> 
SQL> -- Francais
SQL> -- alter session set NLS_NUMERIC_CHARACTERS = ',.'  ;
SQL> declare
  2  saved_stmts NUMBER;
  3  failed_stmts NUMBER;
  4  wkld_name VARCHAR2(30) :='WKLD_GESTION_CABINET_MEDICAL';
  5  taskname VARCHAR2(30) := 'TASK_GESTION_CABINET_MEDICAL';
  6  task_id NUMBER;
  7  num_found NUMBER:=0;
  8  Begin
  9  -- détacher la tache et le workload
 10  select count(*) into num_found
 11  from user_advisor_sqla_wk_map
 12  where task_name = taskname and workload_name = wkld_name;
 13  IF num_found > 0 THEN
 14  DBMS_ADVISOR.RESET_TASK (taskname);
 15  DBMS_ADVISOR.DELETE_SQLWKLD_REF(taskname, wkld_name);
 16  END IF;
 17  
 18  -- suppression puis création de la t
 19  select count(*) into num_found
 20  from dba_advisor_tasks
 21  where owner='&MYPDBUSER' and task_name=taskname;
 22  
 23  IF num_found > 0 THEN
 24  DBMS_ADVISOR.DELETE_TASK (taskname);
 25  END IF;
 26  DBMS_ADVISOR.CREATE_TASK ('SQL Access Advisor', task_id, taskname);
 27  
 28  -- suppression et puis création du workload
 29  select count(*) into num_found
 30  from user_advisor_sqlw_sum
 31  where workload_name = wkld_name;
 32  IF num_found > 0 THEN
 33  DBMS_ADVISOR.DELETE_SQLWKLD(workload_name=> wkld_name);
 34  END IF;
 35  DBMS_ADVISOR.CREATE_SQLWKLD (wkld_name);
 36  
 37  -- chargement du workload
 38  DBMS_ADVISOR.IMPORT_SQLWKLD_USER(
 39  workload_name=> wkld_name,import_mode=>'NEW', owner_name=>'&MYPDBUSER',
 40  table_name=>'USER_WORKLOAD', Saved_rows=>saved_stmts,
 41  Failed_rows=>failed_stmts);
 42  dbms_output.put_line(' saved_stmts='||saved_stmts);
 43  dbms_output.put_line(' failed_stmts='||failed_stmts);
 44  -- Attacher le workload à une tâche
 45  /* Link Workload to Task */
 46  dbms_advisor.add_sqlwkld_ref(taskname,wkld_name);
 47  
 48  --Mise à jour de paramètres de la tâche
 49  dbms_advisor.set_task_parameter(taskname,'EXECUTION_TYPE','INDEX_ONLY');--'FULL');--'INDEX_ONLY');
 50  dbms_advisor.set_task_parameter(taskname,'MODE','COMPREHENSIVE');
 51  
 52  -- exécuter la tâche
 53  DBMS_ADVISOR.EXECUTE_TASK(taskname);
 54  Exception
 55  When others then
 56  dbms_output.put_line(' SQLcode='||sqlcode);
 57  dbms_output.put_line(' SQLerrm='||sqlerrm);
 58  End;
 59  /
old  21: where owner='&MYPDBUSER' and task_name=taskname;
new  21: where owner='HOPITAL' and task_name=taskname;
old  39: workload_name=> wkld_name,import_mode=>'NEW', owner_name=>'&MYPDBUSER',
new  39: workload_name=> wkld_name,import_mode=>'NEW', owner_name=>'HOPITAL',
saved_stmts=14                                                                                                                                                                                          
failed_stmts=0                                                                                                                                                                                          

PL/SQL procedure successfully completed.

SQL> /*
SQL> *
SQL> ERREUR à la ligne 1 :
SQL> ORA-13600: erreur survenue dans Advisor
SQL> ORA-13635: La valeur indiquée pour le paramètre ADJUSTED_SCALEUP_GREEN_THRESH
SQL> ne peut pas être convertie en nombre.
SQL> ORA-06512: à "SYS.PRVT_ADVISOR", ligne 3902
SQL> ORA-06512: à "SYS.DBMS_ADVISOR", ligne 102
SQL> ORA-06512: à ligne 26
SQL> */
SQL> 
SQL> -- ALTER SYSTEM SET NLS_TERRITORY=FRANCE scope=spfile;
SQL> 
SQL> -- si cette apparait faire les  actions suivantes
SQL> -- Ne pas lancer les deux programmes qui suivent
SQL> -- si pas d'erreur
SQL> 
SQL> /*
SQL> -- ne pas exécuter ce script si pas d'erreur plus haut
SQL> declare
SQL> template_id NUMBER;
SQL> template_name VARCHAR2(255):= 'MY_TEMPLATE';
SQL> Begin
SQL> DBMS_ADVISOR.SET_DEFAULT_TASK_PARAMETER (
SQL> 'SQL Access Advisor',
SQL> 'ADJUSTED_SCALEUP_GREEN_THRESH'  ,
SQL> '1,25' -- au lieu de 1.25
SQL> );
SQL> end;
SQL> /
SQL> 
SQL> -- ne pas exécuter ce script si pas d'erreur plus haut
SQL> declare
SQL> template_id NUMBER;
SQL> template_name VARCHAR2(255):= 'MY_TEMPLATE';
SQL> Begin
SQL> DBMS_ADVISOR.SET_DEFAULT_TASK_PARAMETER (
SQL> 'SQL Access Advisor',
SQL> 'OVERALL_SCALEUP_GREEN_THRESH'  ,
SQL> '1,5' -- au lieu de 1.5
SQL> );
SQL> end;
SQL> /
SQL> 
SQL> */
SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 4. Consulter les recommandations
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> -- Consulter les requêtes de référence que va régler SAA
SQL> col WORKLOAD_NAME format a20
SQL> col SQL_TEXT format a70
SQL> set linesize 200
SQL> set pagesize 400
SQL> select WORKLOAD_NAME, sql_id, SQL_TEXT from DBA_ADVISOR_SQLW_STMTS
  2  Where workload_name= 'WKLD_GESTION_CABINET_MEDICAL'
  3  order by sql_id;

WORKLOAD_NAME            SQL_ID SQL_TEXT                                                                                                                                                                
-------------------- ---------- ----------------------------------------------------------------------                                                                                                  
WKLD_GESTION_CABINET         15 SELECT * FROM PATIENT OP                                                                                                                                                
_MEDICAL                                                                                                                                                                                                
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         16 SELECT * FROM CONSULTATION OC                                                                                                                                           
_MEDICAL                                                                                                                                                                                                
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         17 SELECT E.details_examens, COUNT(*) AS NB_LIGNES                                                                                                                         
_MEDICAL                        FROM (SELECT DISTINCT oe.Details_Examen AS details_examens FROM EXAMEN                                                                                                  
                                 oe) E                                                                                                                                                                  
                                GROUP BY E.details_examens                                                                                                                                              
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         18 SELECT E.details_examens, COUNT(*) AS NB_LIGNES                                                                                                                         
_MEDICAL                        FROM (SELECT DISTINCT oe.Details_Examen AS details_examens FROM EXAMEN                                                                                                  
                                 oe) E                                                                                                                                                                  
                                GROUP BY E.details_examens                                                                                                                                              
                                ORDER BY E.details_examens ASC                                                                                                                                          
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         19 SELECT ID_PATIENT_, COUNT (*), SUM (MONTANT_TOTAL)                                                                                                                      
_MEDICAL                            FROM FACTURE                                                                                                                                                        
                                GROUP BY ID_PATIENT_                                                                                                                                                    
                                ORDER BY ID_PATIENT_                                                                                                                                                    
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         20 SELECT *                                                                                                                                                                
_MEDICAL                          FROM CONSULTATION C INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PAT                                                                                                  
                                IENT_                                                                                                                                                                   
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         21 SELECT *                                                                                                                                                                
_MEDICAL                          FROM FACTURE F INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_                                                                                                  
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         22 SELECT *                                                                                                                                                                
_MEDICAL                            FROM CONSULTATION C INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_P                                                                                                  
                                ATIENT_                                                                                                                                                                 
                                ORDER BY C.DATE_CONSULTATION                                                                                                                                            
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         23 SELECT F.ID_PATIENT_, P.EMAIL, SUM (F.MONTANT_TOTAL) MONTANT_TOTAL                                                                                                      
_MEDICAL                            FROM FACTURE F INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIEN                                                                                                  
                                T_                                                                                                                                                                      
                                GROUP BY F.ID_PATIENT_, P.EMAIL                                                                                                                                         
                                ORDER BY F.ID_PATIENT_, P.EMAIL                                                                                                                                         
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         24 SELECT *                                                                                                                                                                
_MEDICAL                            FROM CONSULTATION C RIGHT JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_P                                                                                                  
                                ATIENT_                                                                                                                                                                 
                                ORDER BY C.DATE_CONSULTATION                                                                                                                                            
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         25 SELECT C.*, P.*, E.*                                                                                                                                                    
_MEDICAL                          FROM CONSULTATION  C                                                                                                                                                  
                                       INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_                                                                                                            
                                       INNER JOIN EXAMEN E ON C.ID_CONSULTATION_ = E.ID_CONSULTATION_                                                                                                   
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         26 SELECT F.*, P.*, C.*                                                                                                                                                    
_MEDICAL                          FROM FACTURE  F                                                                                                                                                       
                                       INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_                                                                                                            
                                       INNER JOIN CONSULTATION C ON F.ID_FACTURE_ = C.ID_FACTURE_                                                                                                       
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         27 SELECT C.*, P.*, E.*                                                                                                                                                    
_MEDICAL                            FROM CONSULTATION C                                                                                                                                                 
                                         INNER JOIN PATIENT P ON C.ID_PATIENT_ = P.ID_PATIENT_                                                                                                          
                                         INNER JOIN EXAMEN E ON C.ID_CONSULTATION_ = E.ID_CONSULTATION                                                                                                  
                                _                                                                                                                                                                       
                                ORDER BY C.DATE_CONSULTATION                                                                                                                                            
                                                                                                                                                                                                        
WKLD_GESTION_CABINET         28 SELECT F.ID_PATIENT_,                                                                                                                                                   
_MEDICAL                                 P.EMAIL,                                                                                                                                                       
                                         SUM (F.MONTANT_TOTAL)     MONTANT_TOTAL,                                                                                                                       
                                         F.DATE_FACTURE,                                                                                                                                                
                                         C.DATE_CONSULTATION                                                                                                                                            
                                    FROM FACTURE F                                                                                                                                                      
                                         INNER JOIN PATIENT P ON F.ID_PATIENT_ = P.ID_PATIENT_                                                                                                          
                                         INNER JOIN CONSULTATION C ON F.ID_FACTURE_ = C.ID_FACTURE_                                                                                                     
                                GROUP BY F.ID_PATIENT_,                                                                                                                                                 
                                         P.EMAIL,                                                                                                                                                       
                                         F.DATE_FACTURE,                                                                                                                                                
                                         C.DATE_CONSULTATION                                                                                                                                            
                                ORDER BY F.ID_PATIENT_,                                                                                                                                                 
                                         P.EMAIL,                                                                                                                                                       
                                         F.DATE_FACTURE,                                                                                                                                                
                                         C.DATE_CONSULTATION                                                                                                                                            
                                                                                                                                                                                                        

14 rows selected.

SQL> 
SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Affiche du nr de recommandation, le rang et le bénéfice de
SQL> -- la recommandation
SQL> 
SQL> SELECT REC_ID, RANK, BENEFIT, type
  2  FROM USER_ADVISOR_RECOMMENDATIONS WHERE TASK_NAME = 'TASK_GESTION_CABINET_MEDICAL';

    REC_ID       RANK    BENEFIT TYPE                                                                                                                                                                   
---------- ---------- ---------- ------------------------------                                                                                                                                         
         1          1          0 RETAINS_ONLY                                                                                                                                                           
         2          2          0 RETAINS_ONLY                                                                                                                                                           
         3          3          0 RETAINS_ONLY                                                                                                                                                           
         4          4          0 RETAINS_ONLY                                                                                                                                                           
         5          5          0 RETAINS_ONLY                                                                                                                                                           

SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Afficher des recommandations et des bénéfices
SQL> -- par requêtes
SQL> 
SQL> SELECT sql_id, rec_id, precost, postcost,
  2  (precost-postcost)*100/precost AS percent_benefit
  3  FROM USER_ADVISOR_SQLA_WK_STMTS
  4  WHERE TASK_NAME = 'TASK_GESTION_CABINET_MEDICAL'
  5  AND workload_name = 'WKLD_GESTION_CABINET_MEDICAL';

no rows selected

SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Affichage des actions recommandés :
SQL> -- Comptage des actions recommandées
SQL> 
SQL> 
SQL> SELECT 'Action Count', COUNT(DISTINCT action_id) cnt
  2  FROM user_advisor_actions
  3  WHERE task_name = 'TASK_GESTION_CABINET_MEDICAL';

'ACTIONCOUNT        CNT                                                                                                                                                                                 
------------ ----------                                                                                                                                                                                 
Action Count          4                                                                                                                                                                                 

SQL> 
SQL> 
SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Affichage des actions recommandés :
SQL> -- Liste des actions recommandées
SQL> 
SQL> 
SQL> Col command format A30
SQL> Col attr1 format A40
SQL> Set long 500
SQL> SELECT rec_id, action_id, command, attr1
  2  FROM user_advisor_actions
  3  WHERE task_name = 'TASK_GESTION_CABINET_MEDICAL'
  4  ORDER BY rec_id, action_id;

    REC_ID  ACTION_ID COMMAND                        ATTR1                                                                                                                                              
---------- ---------- ------------------------------ ----------------------------------------                                                                                                           
         1          2 RETAIN INDEX                   "HOPITAL"."PK_PATIENT"                                                                                                                             
         2          1 RETAIN INDEX                   "HOPITAL"."PK_CONSULTATION"                                                                                                                        
         3          4 RETAIN INDEX                   "HOPITAL"."EXAMEN_IDX$$_00130000"                                                                                                                  
         4          2 RETAIN INDEX                   "HOPITAL"."PK_PATIENT"                                                                                                                             
         4          3 RETAIN INDEX                   "HOPITAL"."PK_FACTURE"                                                                                                                             
         5          3 RETAIN INDEX                   "HOPITAL"."PK_FACTURE"                                                                                                                             

6 rows selected.

SQL> 
SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Génération des scripts SQL
SQL> -- Afin d'implémenter les recommandations il est possible de
SQL> -- générer des scripts
SQL> 
SQL> -- La fonction GET_TASK_SCRIPT construire le script
SQL> set serveroutput on
SQL> begin
  2  dbms_output.put_line(DBMS_ADVISOR.GET_TASK_SCRIPT('TASK_GESTION_CABINET_MEDICAL'));
  3  end;
  4  /
Rem  SQL Access Advisor: Version 21.0.0.0.0 - Production
Rem  
Rem  Username:        HOPITAL
Rem  Task:            TASK_GESTION_CABINET_MEDICAL
Rem  Execution date:  26/10/2024 20:38
Rem  

/* RETAIN 
INDEX "HOPITAL"."PK_CONSULTATION" */

/* RETAIN INDEX "HOPITAL"."PK_PATIENT" */

/* RETAIN INDEX "HOPITAL"."PK_FACTURE" */

/* RETAIN INDEX "HOPITAL"."EXAMEN_IDX$$_00130000" */

                      

PL/SQL procedure successfully completed.

SQL> 
SQL> -- La fonction CREATE_FILE permet de créer le fichier
SQL> -- contenant le script
SQL> declare
  2  mydate varchar2(20):=to_char(sysdate, 'DD_MM_YYYY_HH24_MI_SS');
  3  fname varchar2(300):='SAA_Generate_script_on_gestion_cabinet_medical_app_'||mydate||'.sql';
  4  begin
  5  dbms_output.put_line(fname);
  6  DBMS_ADVISOR.CREATE_FILE(
  7  buffer=>DBMS_ADVISOR.GET_TASK_SCRIPT('TASK_GESTION_CABINET_MEDICAL'),
  8  location =>'DATA_PUMP_DIR',
  9   filename=>fname
 10  );
 11  end;
 12  /
SAA_Generate_script_on_gestion_cabinet_medical_app_26_10_2024_20_38_52.sql                                                                                                                              

PL/SQL procedure successfully completed.

SQL> 
SQL> spool off
